#Trade Lot, not divided part for trading, contains shares count for an account on date.
Wealthbot\ClientBundle\Entity\Lot:
    type: entity
    table: lots
    repositoryClass: Wealthbot\ClientBundle\Repository\LotRepository
    fields:
        id:
            type: integer
            id: true
            generator:
                strategy: AUTO
        quantity:
            type: float
            nullable: true
        amount:
            type: float
            nullable: true
        status:
            type: integer
            nullable: true
        date:
            type: date
            nullable: true
            
        #If we know costBasis is valid.
        #CostBasis can be notnull, but costBasisKnown can be false.
        costBasisKnown:
            column: is_cost_basis_known
            type: boolean
            nullable: false

        #"wash sale" is very specific term. some ETF's (for example) have rules so you can't buy an sell within a certain period.
        #you must hold the security for a certain amount of time, to prevent "pump and dump" schemes
        #(it's really a financial thing.. i'm not that familiar with it)... date is just the date of the current record...
        #this table might be updated daily. the original tx date is tied through the transactions table
        washSale:
            type: boolean
            nullable: false
            column: is_wash_sale

        #price include all taxes (custodian and so on)
        costBasis:
            type: float
            nullable: false
            column: cost_basis

        #when Lot is closing that flag on Initial Lot must be set to true
        wasClosed:
            type: boolean
            nullable: false
            column: was_closed

        realizedGain:
            type: float
            nullable: true
            column: realized_gain_loss

        wasRebalancerDiff:
            type: boolean
            nullable: false
            column: was_rebalancer_diff

    manyToOne:
        #position by day
        position:
            targetEntity: Wealthbot\ClientBundle\Entity\Position
            inversedBy: lots
            joinColumn:
                name: position_id
                referencedColumnName: id
                onDelete: cascade
        clientSystemAccount:
            targetEntity: Wealthbot\ClientBundle\Entity\SystemAccount
            joinColumn:
                name: client_system_account_id
                referencedColumnName: id
                onDelete: cascade
            cascade: ['persist']
        security:
            targetEntity: Wealthbot\AdminBundle\Entity\Security
            joinColumn:
                name: security_id
                referencedColumnName: id
                onDelete: cascade
            cascade: ['persist']
        initial:
            targetEntity: Wealthbot\ClientBundle\Entity\Lot
            joinColumn:
                name: initial_lot_id
                referencedColumnName: id
                onDelete: set null
            cascade: ['persist']


    oneToMany:
        transactions:
            targetEntity: Wealthbot\AdminBundle\Entity\Transaction
            mappedBy: lot
